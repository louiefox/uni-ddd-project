@using DDDProject.Data;
@inject SocietyDataService societyDataService

@page "/society/{societyID}"

<div class="container">
    @if (society.IsMemberOf)
    {
        <div class="left-side">
            <div class="society-header">
                <div class="profile-society">
                    <span class="oi oi-@society.Icon" aria-hidden="true"></span>
                </div>
                <h1>@society.Name Society</h1>
            </div>
            <div class="society-info">
                <h3>A society where...</h3>
                <h1>Upcoming Events</h1>

                <div class="events-row">
                    @foreach (EventData eventData in societyEventsList)
                    {
                        <div class="card">
                            <div class="blank-event"/>
                            <h2>@eventData.Name</h2>
                            <h3>@eventData.DateLocation</h3>
                        </div>
                    }
                </div>

            </div>
            <div class="announcements-list">
                <h1>Announcements</h1>
                @foreach (AnnouncementData announcement in societyAnnouncements)
                {
                    <h3>@announcement.Content</h3>
                    <p>@announcement.Date</p>
                }
            </div>
        </div>

        <div class="right-side">
            <a class="society-chat" href="/chat">
                <span class="oi oi-chat" aria-hidden="true"></span>
            </a>
            <h1>Members:</h1>
            <div class="members-list">
                @foreach (MemberData member in societyMembersList)
                {
                    <span class="member-row">
                        <h3>@member.Fullname (@member.Username)</h3>
                        @if (member.IsAdministrator) { <h4>Admin</h4> }
                    </span>
                }
            </div>
            <div class="leave-button" @onclick="LeaveSociety">
                Leave Society :(
            </div>
        </div>
    }
    else
    {
        <div class="left-side">
            <div class="society-header">
                <div class="profile-society">
                    <span class="oi oi-@society.Icon" aria-hidden="true"></span>
                </div>
                <h1>@society.Name Society</h1>
            </div>
            <div class="society-info">
                <h3>A society where...</h3>
            </div>
            <div class="society-join" @onclick="JoinSociety">
                Join
            </div>
        </div>
        <div class="right-side">
            <h1>Members:</h1>
            <div class="members-list">
                @foreach (MemberData member in societyMembersList)
                {
                    <span class="member-row">
                        <h3>@member.Fullname (@member.Username)</h3>
                        @if (member.IsAdministrator) { <h4>Admin</h4> }
                    </span>
                }
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public string societyID{ get; set; }

    private SocietyData society;
    private List<MemberData> societyMembersList = new();
    private List<EventData> societyEventsList = new();
    private List<AnnouncementData> societyAnnouncements = new();

    protected override async Task OnInitializedAsync()
    {
        society = await societyDataService.RequestSocietyData(ClientLoginService.LoginToken, societyID);
        societyMembersList = await societyDataService.RequestSocietyMembers(societyID);

        if(society.IsMemberOf)
        {
            societyEventsList = await societyDataService.RequestSocietyEventsList(societyID);
            societyAnnouncements = await societyDataService.RequestSocietyAnnouncements(societyID);
        }
    }

    private async void JoinSociety()
    {
        society = await societyDataService.RequestJoinSociety(ClientLoginService.LoginToken, societyID);
    }

    private async void LeaveSociety()
    {
        society = await societyDataService.RequestLeaveSociety(ClientLoginService.LoginToken, societyID);
    }
}