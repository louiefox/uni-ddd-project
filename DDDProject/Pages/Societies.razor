@using DDDProject.Data;
@inject SocietyDataService societyDataService

@page "/societies"

<div class="container">
    @if (ClientLoginService.IsLoggedIn)
    {
        <h1>Your Societies</h1>
        <div class="societies-list">
            @foreach (SocietyData society in mySocietiesList)
            {
                <a class="society-card" href="/society/@society.SocietyID">
                    <span class="oi oi-@society.Icon" aria-hidden="true"></span>
                    <h2>@society.Name</h2>
                </a>
            }
            <a class="society-card">
                <span class="oi oi-plus" aria-hidden="true"></span>
            </a>
        </div>
        <div class="events-section"> 
            <h1>Your Society Events</h1> 

            @foreach (EventData eventData in myEventsDisplayList)
            {
                <div class="card">
                    <div class="blank-event"/>
                    <h1>@eventData.Name</h1>
                    <h2>@eventData.SocietyName Society</h2>
                    <h3>@eventData.DateLocation</h3>
                </div>
            }
        </div>
    }
    else
    {
        <div class="login-notice">You must be logged in to view this.</div>
    }
</div>

@code {
    private List<SocietyData> mySocietiesList;
    private List<EventData> myEventsList;
    private List<EventData> myEventsDisplayList = new();

    protected override async Task OnInitializedAsync()
    {
        if(!ClientLoginService.IsLoggedIn) return;

        mySocietiesList = await societyDataService.RequestMySocieties(ClientLoginService.LoginToken);
        myEventsList = await societyDataService.RequestEventsList();

        for(int i = 0; i < Math.Min(myEventsList.Count, 3); i++)
        {   
            myEventsDisplayList.Add(myEventsList.ToArray()[i]);
        }
    }
}